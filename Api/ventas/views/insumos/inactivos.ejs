<!doctype html>
<html lang="en">

<head>
    <title>Insumoss de insumos</title>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.0.0/flowbite.min.css" rel="stylesheet" />
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    <script src="https://code.jquery.com/jquery-3.7.0.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.0.0/flowbite.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/toastr@2.1.4/dist/toastr.min.js" integrity="sha384-Ez5aZ2PzkBF+Ork/4SNapDFvf1kG49arFWN/JdLWfcEM8l8zyo/9WwMdi24kvOLs" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastr@2.1.4/dist/toastr.min.css" integrity="sha384-xV4aU8eR8VnuERn5PGtIgG/J8KV5ZZD5oggtguZO3ODATN4bgIUc7OFzK9N90i6L" crossorigin="anonymous">


</head>

<body>
    <nav class="border-gray-200 bg-gray-50 dark:bg-gray-800 dark:border-gray-800 shadow-md">
        <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
            <a href="#" class="flex items-center space-x-3 rtl:space-x-reverse">
                <img src="/images/jacke.png" class="h-10" alt="Flowbite Logo" />
                <span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">Jacke nail</span>
            </a>
            <button data-collapse-toggle="navbar-solid-bg" type="button"
                class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
                aria-controls="navbar-solid-bg" aria-expanded="false">
                <span class="sr-only">Open main menu</span>
                <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                    viewBox="0 0 17 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M1 1h15M1 7h15M1 13h15" />
                </svg>
            </button>
            <div class="hidden w-full md:block md:w-auto" id="navbar-solid-bg">
                <ul
                    class="flex flex-col font-medium mt-4 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-transparent dark:bg-gray-800 md:dark:bg-transparent dark:border-gray-700">
                    <li>
                        <a href="http://localhost:3000/Ventas/ventas"
                            class="block py-2 px-3 md:p-0 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Ventas
                        </a>
                    </li>
                    <li>
                        <a href="http://localhost:3000/Ventas/usuarios"
                            class="block py-2 px-3 md:p-0 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Usuarios
                        </a>
                    </li>
                    <li>
                        <a href="http://localhost:3000/Ventas/servicios"
                            class="block py-2 px-3 md:p-0 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Servicios</a>
                    </li>
                    <li>
                        <a href="http://localhost:3000/Ventas/insumos"
                            class="block py-2 px-3 md:p-0 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">Insumos</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <br><br>
    <div class="text-center my-12 mb-2">
        <ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
            <li class="inline-flex items-center">
                <a href="#"
                    class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
                    <svg class="w-3 h-3 me-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                        fill="currentColor" viewBox="0 0 20 20">
                        <path
                            d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z" />
                    </svg>
                    Inicio
                </a>
            </li>
            <li>
                <div class="flex items-center">
                    <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" fill="none"
                        viewBox="0 0 6 10">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="m1 9 4-4-4-4" />
                    </svg>
                    <a
                        class="cursor-pointer ms-1 text-sm font-medium text-gray-700  md:ms-2 dark:text-gray-400 dark:hover:text-white">Insumos</a>
                </div>
            </li>
            <li aria-current="page">
                <div class="flex items-center">
                    <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="m1 9 4-4-4-4" />
                    </svg>
                    <span class="ms-1 text-sm font-medium text-gray-500 md:ms-2 dark:text-gray-400">Insumoss de
                        insumos</span>
                </div>
            </li>
        </ol>
    </div>
    <br><br>
    <div class="container">
        <div class="row">
            <div class="col-md-5">
                <div>
                    <div>
                    </div>
                    <div class="card-body">
                        <section class="bg-gray-50 dark:bg-gray-900">
                            <div
                                class="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0 formulario-conteiner">
                                <div
                                    class="w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700">
                                    <div class="border-2 border-blue-300 rounded-lg p-8 space-y-6 sm:p-8">
                                        <h1
                                            class="flex justify-center text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white py-2">
                                            Registrar Insumos
                                        </h1>
                                        <form id="miFormulario" class="space-y-6" action="#"
                                            enctype="multipart/form-data">
                                            <!-- Primera fila -->
                                            <div class="flex-1 mb-4">
                                                <div class="mb-4">
                                                    <label
                                                        class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                                                        for="file_input"> Imagen del Insumo: </label>
                                                    <input
                                                        class="block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400"
                                                        id="file_input" name="imagen" type="file"
                                                        onchange="mostrarImagenSeleccionada(this)"
                                                        enctype="multipart/form-data">

                                                </div>
                                            </div>
                                            <div class="flex space-x-4">
                                                <div class="flex-1 mb-4">
                                                    <label
                                                        class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                                                        for="name">Nombre del Insumo</label>
                                                    <input type="text" name="Insumo" id="Insumo"
                                                        class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-3 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                                        placeholder="Nombre del Insumo">
                                                </div>
                                                <div class="flex-1 mb-4">
                                                    <label
                                                        class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                                                        for="quantity">Cantidad</label>
                                                    <input type="number" name="Cantidad" id="Cantidad"
                                                        class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-3 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                                        placeholder="Cantidad">

                                                </div>
                                            </div>
                                            <!-- Segunda fila -->
                                            <div class="flex space-x-4">
                                                <!-- Estado -->
                                                <div class="flex-1 mb-4">
                                                    <label
                                                        class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                                                        for="status">Estado</label>
                                                    <button type="button" id="estadoBtn"
                                                        class="text-white bg-gradient-to-r from-cyan-400 via-cyan-500 to-cyan-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 shadow-lg shadow-cyan-500/50 dark:shadow-lg dark:shadow-cyan-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2">
                                                        Estado
                                                    </button>
                                                </div>

                                                <!-- Categoría -->
                                                <div class="flex-1 mb-4">
                                                    <label
                                                        class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                                                        for="category">Categoría</label>
                                                    <select id="category" name="category"
                                                        class="block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400">
                                                        <!-- Opciones de categoría aquí -->
                                                        <option value="Limas">Limas</option>
                                                        <option value="Esmaltes">Esmaltes</option>
                                                        <option value="herramientas">herramientas</option>
                                                    </select>
                                                </div>


                                            </div>
                                            <div id="vistaPreviaImagen" class="mb-4">
                                                <img id="imagenSeleccionada"
                                                    class="w-full max-h-40 object-cover rounded-lg"
                                                    alt="Vista previa de la imagen">
                                            </div>
                                            <!-- Botón de guardar -->
                                            <div class="flex justify-center">
                                                <button type="submit" id="btnGuardar"
                                                    class="text-white bg-gradient-to-r from-teal-400 via-teal-500 to-teal-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-teal-300 dark:focus:ring-teal-800 shadow-lg shadow-teal-500/50 dark:shadow-lg dark:shadow-teal-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2">Guardar</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>


                    <div class="card-footer text-muted">
                    </div>
                </div>
            </div>

            <div class="col-md-7">
                <br>
                <div class="table-responsive">
                    <table id="tabla" class=" table table-bordered border-black table-striped text-center mt-1 ">
                        <thead style="background-color: #2b2929; color: white;">
                            <tr>
                                <th scope="col" style="text-align: center; vertical-align: middle;">ID</th>
                                <th scope="col" style="text-align: center; vertical-align: middle;">NOMBRE Insumo
                                </th>
                                <th scope="col" style="text-align: center; vertical-align: middle;">cantidad</th>
                                <th scope="col" style="text-align: center; vertical-align: middle;">Categoria</th>


                                <th scope="col" style="text-align: center; vertical-align: middle;">Estado</th>
                                <a class="text-white bg-gradient-to-r from-teal-400 via-teal-500 to-teal-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-teal-300 dark:focus:ring-teal-800 shadow-lg shadow-teal-500/50 dark:shadow-lg dark:shadow-teal-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2"
                                    href="http://localhost:3000/Ventas/Insumos" type="button" id="btnCancelar"><i
                                        class="fa fa-arrow-circle-left"></i> Activos</a>
                                <th scope="col" style="text-align: center; vertical-align: middle;">ACCIONES</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% for (let i=0; i < Modeloinsumoss.length; i++) { %>

                                <tr>
                                    <td style="text-align: center; vertical-align: middle;">
                                        <%= i + 1 %>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="flex items-center">
                                            <img src="/images/<%= encodeURIComponent(Modeloinsumoss[i].Img) %>"
                                                class="w-10 h-10 rounded-full" alt="Imagen de servicio">
                                            <div class="ps-3" style="vertical-align: top;">
                                                <div class="text-base font-semibold">
                                                    <%= Modeloinsumoss[i].nombreInsumo %>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">

                                        <div style="text-align: center; vertical-align: middle;">

                                            <%= Modeloinsumoss[i].cantidadInsumo %>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">

                                        <div style="text-align: center; vertical-align: middle;">

                                            <%= Modeloinsumoss[i].categoria %>
                                        </div>
                                    </td>
                                    <td style="text-align: center; vertical-align: middle;">
                                        <% var estado=Modeloinsumoss[i].estadoInsumo; %>
                                            <button type="button" class="<%= estado === 1
                                            ? 'text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2'
                                            : estado === 2
                                                ? 'text-white bg-gradient-to-r from-lime-200 via-lime-400 to-lime-500 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-lime-300 dark:focus:ring-lime-800 shadow-lg shadow-lime-500/50 dark:shadow-lg dark:shadow-lime-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2'
                                                : 'text-white bg-gradient-to-r from-pink-400 via-pink-500 to-pink-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-pink-300 dark:focus:ring-pink-800 shadow-lg shadow-pink-500/50 dark:shadow-lg dark:shadow-pink-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2'
                                        %>" onclick="enviarEstado('<%= Modeloinsumoss[i]._id %>', <%= estado %>)"
                                                data-id="<%= Modeloinsumoss[i]._id %>">
                                                <%= estado===1 ? 'Activo' : estado===2 ? 'Habilitado' : 'Inactivo' %>
                                            </button>
                                    </td>


                                    <td style="text-align: center; vertical-align: middle;">

                                        <a href="http://localhost:3000/Ventas/Insumos/FormEdit/<%= Modeloinsumoss[i]._id %>"
                                            class="btn btn-outline-info"><i class="fa-solid fa-file-pen"></i></a>

                                        <a onclick="confirmar_eliminar('<%= Modeloinsumoss[i]._id %>')"
                                            class="btn btn-outline-danger cursor-pointer  "><i
                                                class="fa-solid fa-trash-can"></i></a>


                                    </td>
                                </tr>
                                <% } %>


                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <% for (let i=0; i < Modeloinsumoss.length; i++) { %>

        <div id="userDropdown"
            class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-36 dark:bg-gray-700 dark:divide-gray-600">

        </div>
        <% } %>
            <script>
                function mostrarImagenSeleccionada(input) {
                    const imagenSeleccionada = document.getElementById('imagenSeleccionada');
                    const vistaPreviaImagen = document.getElementById('vistaPreviaImagen');

                    // Verifica si se seleccionó una imagen
                    if (input.files && input.files[0]) {
                        const lector = new FileReader();

                        lector.onload = function (e) {
                            imagenSeleccionada.src = e.target.result;
                        };

                        lector.readAsDataURL(input.files[0]);

                        vistaPreviaImagen.style.display = 'block';
                    } else {
                        // Oculta la vista previa si no hay imagen seleccionada
                        vistaPreviaImagen.style.display = 'none';
                    }
                }

                let estadoSeleccionado = '';

                document.getElementById('estadoBtn').addEventListener('click', function () {
                    Swal.fire({
                        title: 'Seleccionar Estado',
                        input: 'select',
                        inputOptions: {
                            1: 'Activo',
                            2: 'Habilitado',
                            3: 'Inactivo'
                        },
                        inputPlaceholder: 'Seleccionar estado',
                        showCancelButton: true,
                        confirmButtonText: 'Guardar',
                        cancelButtonText: 'Cancelar',
                        inputValidator: (value) => {
                            return new Promise((resolve) => {
                                if (value !== '') {
                                    resolve();
                                } else {
                                    resolve('Debes seleccionar un estado');
                                }
                            });
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            estadoSeleccionado = result.value;
                            console.log('Estado seleccionado:', estadoSeleccionado);
                        }
                    });
                });

                function enviarEstado(idInsumo, estadoActual) {
                    // Lógica para enviar el estado al servidor o realizar alguna acción
                    console.log('Enviando estado:', estadoActual, 'para el ID:', idInsumo);

                    // Obtener el siguiente estado
                    const siguiente = siguienteEstado(estadoActual);

                    // Actualizar el estado en el botón
                    actualizarEstado(idInsumo, siguiente);

                    // Enviar la solicitud a la API para cambiar el estado
                    cambiarEstadoEnAPI(idInsumo, siguiente);
                }

                function mostrarAlerta() {
                    const alerta = document.createElement('div');
                    alerta.className = 'alert alert-success position-fixed bottom-2 end-0 p-3 m-3';
                    alerta.innerHTML = 'Estado cambiado exitosamente';

                    document.querySelector('.container').appendChild(alerta);

                    setTimeout(() => {
                        alerta.remove();
                    }, 3000); // Eliminar la alerta después de 3 segundos
                }

                function cambiarEstadoEnAPI(idInsumo, nuevoEstado) {
                    fetch(`http://localhost:3000/Ventas/cambiarEstado/${idInsumo}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ nuevoEstado }),
                    })
                        .then(response => response.json())
                        .then(data => {
                            mostrarAlerta();
                            setTimeout(function () {
                                location.reload();
                            }, 500);
                        })
                        .catch(error => {
                            console.error('Error al enviar solicitud a la API:', error);
                        });
                }

                function siguienteEstado(estadoActual) {
                    // Lógica para obtener el siguiente estado
                    return estadoActual === 1 ? 2 : estadoActual === 2 ? 3 : 1;
                }

                function actualizarEstado(idInsumo, nuevoEstado) {
                    // Lógica para actualizar el estado en el botón
                    const boton = document.querySelector(`button[data-id="${idInsumo}"]`);
                    boton.setAttribute('data-estado', nuevoEstado);
                }



                document.addEventListener("DOMContentLoaded", function () {
                    const formulario = document.getElementById("miFormulario");

                    formulario.addEventListener("submit", function (event) {
                        event.preventDefault();

                        if (validarFormulario()) {

                            Swal.fire({
                                icon: 'success',
                                title: '¡Formulario enviado!',
                                text: 'Los datos fueron enviados correctamente.'
                            });
                        }
                    });


                });


                document.addEventListener("DOMContentLoaded", function () {
                    const formulario = document.getElementById("miFormulario");

                    formulario.addEventListener("submit", async function (event) {
                        event.preventDefault();

                        if (validarFormulario()) {
                            try {
                                // Obtener datos del formulario
                                const insumo = document.getElementById('Insumo').value;
                                const cantidad = document.getElementById('Cantidad').value;
                                const estado = estadoSeleccionado; // Usar el estado seleccionado
                                const categoria = document.getElementById('category').value;
                                const imagenInput = document.getElementById('file_input');
                                const imagen = imagenInput.files[0];
                                const formData = new FormData();
                                formData.append('insumo', insumo);
                                formData.append('cantidad', cantidad);
                                formData.append('estado', estado);
                                formData.append('categoria', categoria);
                                formData.append('imagen', imagen);
                                console.log(formData);
                                const response = await fetch('http://localhost:3000/Ventas/Insumos/registrarInsumos', {
                                    method: 'POST',
                                    body: formData,
                                });
                                const data = await response.json();
                                console.log('Respuesta de la API:', data);
                                if (response.ok) {
                                    // Mostrar éxito con SweetAlert2 y preguntar si desean hacer algo adicional
                                    Swal.fire({
                                        title: 'Insumo creado exitosamente',
                                        text: '¿Deseas hacer algo adicional?',
                                        icon: 'success',
                                        showCancelButton: true,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d33',
                                        confirmButtonText: 'Sí, hacer algo adicional',
                                        cancelButtonText: 'No, cerrar',
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            // Aquí puedes agregar la lógica para hacer algo adicional
                                            Swal.fire('Acción adicional realizada', '', 'success');
                                            setTimeout(function () {
                                                location.reload();
                                            }, 2000);
                                        }
                                    });
                                } else {
                                    // Mostrar error con SweetAlert2
                                    Swal.fire('Error al crear el insumo', '', 'error');
                                }

                            } catch (error) {
                                console.error('Error al enviar la solicitud a la API:', error);
                                // Mostrar error con SweetAlert2 en caso de una excepción
                                Swal.fire('Error al enviar la solicitud a la API', '', 'error');
                            }
                        }
                    });
                    function validarFormulario() {
                        const insumo = document.getElementById("Insumo").value.trim();
                        const cantidad = document.getElementById("Cantidad").value.trim();
                        const estado = document.getElementById("estadoBtn").textContent.trim();
                        const categoria = document.getElementById("category").value.trim();

                        if (insumo === "" || cantidad === "" || estadoSeleccionado === "" || categoria === "Seleccione una categoría") {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error de validación',
                                text: 'Por favor, completa todos los campos.'
                            });
                            return false;
                        }


                        return true;
                    }
                });

                function confirmar_eliminar(idUsuario) {
                    Swal.fire({
                        title: '¿Está seguro de eliminar el registro?',
                        text: 'Si lo elimina, no podrá restablecerlo',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Sí, Borrar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            eliminarInsumos(idUsuario);
                        }
                    });

                }



                //eliminar insumos 
                function eliminarInsumos(id) {
                    fetch(`http://localhost:3000/Ventas/Insumos/eliminarInsumo/${id}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    })
                        .then(response => response.json())
                        .then(data => {
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: 'Borrado correctamente',
                                showConfirmButton: false,
                                timer: 1500
                            }).then(() => {
                                setTimeout(function () {
                                    location.reload();
                                }, 500);
                            });
                        })
                        .catch(error => {
                            console.error('Error al enviar solicitud a la API:', error);
                        });
                }



            </script>

            <script src="https://code.jquery.com/jquery-3.7.0.js"></script>
            <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
            <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
                integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
                crossorigin="anonymous" referrerpolicy="no-referrer" />
            <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.0.0/flowbite.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
                integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
                crossorigin="anonymous"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.all.min.js"></script>

            <script>


            </script>
</body>

</html>